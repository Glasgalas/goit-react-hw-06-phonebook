{"version":3,"sources":["components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/actions.jsx","redux/contacts/reducers.jsx","redux/rootReducer.jsx","redux/store.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContact","items","createReducer","state","action","payload","filter","id","combineReducers","contacts","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","initialState","name","phoneNumber","ContactForm","dispatch","useDispatch","useState","setState","isOpen","setOpen","handleChange","e","prev","target","value","toggleModal","className","s","btn","onClick","modal","modalBody","onSubmit","preventDefault","newContact","shortid","generate","form","label","input","type","pattern","title","required","onChange","buttons","ContactItem","useSelector","find","contact","getContactItem","item","wrapper","btnDelete","getContacts","getFilter","ContactList","filterValue","visibleContacts","normalizedFilter","toLowerCase","includes","handleFilterContact","map","Filter","setValue","search","placeholder","Contacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e57e8f14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__2PlcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__3rOBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ContactForm_modal__jrRdL\",\"modalBody\":\"ContactForm_modalBody__2mHmr\",\"label\":\"ContactForm_label__2ivME\",\"input\":\"ContactForm_input__2mlN0\",\"buttons\":\"ContactForm_buttons__1EzAW\",\"btn\":\"ContactForm_btn__3Zmha\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contact/add');\n\nexport const deleteContact = createAction('contact/delete');\n\nexport const filterContact = createAction('contact/filter');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { addContact, deleteContact, filterContact } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\n\nimport contacts from './contacts/reducers';\n\nexport default combineReducers({\n  contacts,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport reducer from './rootReducer';\n\nexport const store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/actions';\n\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\n\nconst initialState = {\n  id: '',\n  name: '',\n  phoneNumber: '',\n};\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const [state, setState] = useState(initialState);\n  const { name, phoneNumber } = state;\n  const [isOpen, setOpen] = useState(false);\n\n  const handleChange = e => {\n    setState(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      phoneNumber,\n    };\n\n    dispatch(addContact(newContact));\n\n    toggleModal();\n    setState(initialState);\n  };\n\n  const toggleModal = () => {\n    setOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <button className={s.btn} onClick={toggleModal}>\n        Добавить\n      </button>\n      {isOpen && (\n        <div className={s.modal}>\n          <div className={s.modalBody}>\n            <form onSubmit={handleSubmit} className={s.form}>\n              <label className={s.label}>\n                <span>Имя контакта:</span>\n                <input\n                  className={s.input}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                  onChange={handleChange}\n                />\n              </label>\n\n              <label>\n                <span>Номер телефона:</span>\n                <input\n                  className={s.input}\n                  type=\"tel\"\n                  name=\"phoneNumber\"\n                  value={phoneNumber}\n                  pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                  title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                  required\n                  onChange={handleChange}\n                />\n              </label>\n              <div className={s.buttons}>\n                <button className={s.btn} type=\"submit\">\n                  Добавить\n                </button>\n                <button className={s.btn} onClick={toggleModal}>\n                  Отмена\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/actions';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactItem.module.css';\n\nconst getContactItem = id => state =>\n  state.contacts.items.find(contact => contact.id === id);\n\nexport default function ContactItem({ id }) {\n  const dispatch = useDispatch();\n  const { name, phoneNumber } = useSelector(getContactItem(id));\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={s.item}>\n      <div className={s.wrapper}>\n        <span className={s.name}> {name} </span>\n        <span className={s.phoneNumber}> {phoneNumber}</span>\n      </div>\n      <button className={s.btnDelete} type=\"button\" onClick={handleDelete}>\n        Удалить\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  }),\n};\n","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem/ContactItem';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n\n  const handleFilterContact = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = handleFilterContact();\n\n  return (\n    <ul>\n      {visibleContacts.map(({ id }) => (\n        <ContactItem key={id} id={id} />\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\n\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  dispatch(filterContact(value));\n\n  return (\n    <label>\n      <input\n        className={s.search}\n        placeholder=\"Введите имя для поиска\"\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n      />\n    </label>\n  );\n}\n","import ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nimport s from './Contacts.module.css';\n\nexport default function Contacts() {\n  return (\n    <>\n      <h1 className={s.contacts}>Контакты</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import './App.css';\nimport Contacts from './components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\n// import { createStore } from 'redux';\n// import rootReducer from './redux/rootReducer';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1Hz36\",\"name\":\"ContactItem_name__uUpSx\",\"phoneNumber\":\"ContactItem_phoneNumber__38v8c\",\"btnDelete\":\"ContactItem_btnDelete__1RxZ_\"};"],"sourceRoot":""}